/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/routes/__root'
import { Route as TranscribeIndexRouteImport } from './app/routes/transcribe/index'
import { Route as SettingsIndexRouteImport } from './app/routes/settings/index'
import { Route as ModelsIndexRouteImport } from './app/routes/models/index'
import { Route as LiveRecorderIndexRouteImport } from './app/routes/live-recorder/index'
import { Route as homeIndexRouteImport } from './app/routes/(home)/index'

const TranscribeIndexRoute = TranscribeIndexRouteImport.update({
  id: '/transcribe/',
  path: '/transcribe/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const ModelsIndexRoute = ModelsIndexRouteImport.update({
  id: '/models/',
  path: '/models/',
  getParentRoute: () => rootRouteImport,
} as any)
const LiveRecorderIndexRoute = LiveRecorderIndexRouteImport.update({
  id: '/live-recorder/',
  path: '/live-recorder/',
  getParentRoute: () => rootRouteImport,
} as any)
const homeIndexRoute = homeIndexRouteImport.update({
  id: '/(home)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof homeIndexRoute
  '/live-recorder': typeof LiveRecorderIndexRoute
  '/models': typeof ModelsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/transcribe': typeof TranscribeIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof homeIndexRoute
  '/live-recorder': typeof LiveRecorderIndexRoute
  '/models': typeof ModelsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/transcribe': typeof TranscribeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(home)/': typeof homeIndexRoute
  '/live-recorder/': typeof LiveRecorderIndexRoute
  '/models/': typeof ModelsIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/transcribe/': typeof TranscribeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/live-recorder' | '/models' | '/settings' | '/transcribe'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/live-recorder' | '/models' | '/settings' | '/transcribe'
  id:
    | '__root__'
    | '/(home)/'
    | '/live-recorder/'
    | '/models/'
    | '/settings/'
    | '/transcribe/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  homeIndexRoute: typeof homeIndexRoute
  LiveRecorderIndexRoute: typeof LiveRecorderIndexRoute
  ModelsIndexRoute: typeof ModelsIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
  TranscribeIndexRoute: typeof TranscribeIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/transcribe/': {
      id: '/transcribe/'
      path: '/transcribe'
      fullPath: '/transcribe'
      preLoaderRoute: typeof TranscribeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/models/': {
      id: '/models/'
      path: '/models'
      fullPath: '/models'
      preLoaderRoute: typeof ModelsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/live-recorder/': {
      id: '/live-recorder/'
      path: '/live-recorder'
      fullPath: '/live-recorder'
      preLoaderRoute: typeof LiveRecorderIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(home)/': {
      id: '/(home)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  homeIndexRoute: homeIndexRoute,
  LiveRecorderIndexRoute: LiveRecorderIndexRoute,
  ModelsIndexRoute: ModelsIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
  TranscribeIndexRoute: TranscribeIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
